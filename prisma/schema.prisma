generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ad_revenue {
  ad_id         Int       @id
  campaign_name String?
  product_id    Int?
  spend         Decimal?  @db.Decimal(12, 2)
  revenue       Decimal?  @db.Decimal(12, 2)
  impressions   Int?
  clicks        Int?
  date          DateTime? @db.Date
  products      products? @relation(fields: [product_id], references: [product_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ad_revenue_product")
}

model customer_support {
  ticket_id               Int            @id
  customer_id             Int?
  issue_type              String?
  resolution_time_minutes Int?
  resolved                Boolean?
  support_date            DateTime?      @db.Date
  user_segments           user_segments? @relation(fields: [customer_id], references: [customer_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_customer_support_customer")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model inventory {
  product_id     Int?
  warehouse_id   Int?
  stock_quantity Int?
  last_updated   DateTime? @db.Timestamp(6)
  products       products? @relation(fields: [product_id], references: [product_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_inventory_product")

  @@ignore
}

model products {
  product_id   Int          @id
  product_name String?
  category     String?
  price        Decimal?     @db.Decimal(14, 2)
  supplier_id  Int?
  ad_revenue   ad_revenue[]
  inventory    inventory[]
  suppliers    suppliers?   @relation(fields: [supplier_id], references: [supplier_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_products_supplier")
  returns      returns[]
  sales        sales[]
}

model returns {
  return_id      Int            @id
  transaction_id Int?
  customer_id    Int?
  product_id     Int?
  reason         String?
  user_segments  user_segments? @relation(fields: [customer_id], references: [customer_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_returns_customer")
  products       products?      @relation(fields: [product_id], references: [product_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_returns_product")
  sales          sales?         @relation(fields: [transaction_id], references: [transaction_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_returns_transaction")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model returns_raw {
  csv_index      String?
  return_id      Int?
  transaction_id Int?
  customer_id    Int?
  product_id     Int?
  reason         String?

  @@ignore
}

model sales {
  transaction_id   Int            @id
  customer_id      Int?
  product_id       Int?
  quantity         Int?
  payment_method   String?
  transaction_date DateTime?      @db.Timestamp(6)
  returns          returns[]
  user_segments    user_segments? @relation(fields: [customer_id], references: [customer_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_sales_customer")
  products         products?      @relation(fields: [product_id], references: [product_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_sales_product")

  @@index([customer_id], map: "idx_sales_customer")
  @@index([product_id], map: "idx_sales_product")
}

model Suppliers {
  supplier_id   Int        @id
  supplier_name String?
  region        String?
  rating        Decimal?   @db.Decimal(3, 2)
  products      products[]
}

model traffic {
  traffic_id    Int            @id
  customer_id   Int?
  channel       String?
  session_start DateTime?      @db.Timestamp(6)
  device        String?
  user_segments user_segments? @relation(fields: [customer_id], references: [customer_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_traffic_customer")

  @@index([customer_id], map: "idx_traffic_customer")
}

model user_segments {
  customer_id       Int                @id
  segment           String?
  region            String?
  registration_date DateTime?          @db.Date
  customer_support  customer_support[]
  returns           returns[]
  sales             sales[]
  traffic           traffic[]
}
